From 3c818d0f7cb0de3f3cb70601d6ff60b4390839f8 Mon Sep 17 00:00:00 2001
From: muryanto1 <muryanto1@llnl.gov>
Date: Mon, 3 Feb 2020 16:23:35 -0800
Subject: [PATCH] replaced numpy.ma.rank with numpy.rank

---
 Experimental/predsel.py | 2 +-
 Lib/MV2.py              | 2 +-
 Lib/tvariable.py        | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/Experimental/predsel.py b/Experimental/predsel.py
index 81e202f..8b90b5e 100644
--- a/Experimental/predsel.py
+++ b/Experimental/predsel.py
@@ -43,7 +43,7 @@ class PredicateComponent (cdms.selectors.SelectorComponent):
         axis = fetchedaxes[index]
         m = numpy.zeros(fetched.shape,numpy.int32)
         if index <>0:
-            p = numpy.arange(numpy.ma.rank(fetched))
+            p = numpy.arange(numpy.rank(fetched))
             p[0] = index
             p[index] = 0
             m = numpy.transpose(m, p)
diff --git a/Lib/MV2.py b/Lib/MV2.py
index 4b4ec37..8939c87 100644
--- a/Lib/MV2.py
+++ b/Lib/MV2.py
@@ -9,7 +9,7 @@ from numpy import ubyte, uint8, uint16, uint32, uint64, long   # noqa
 from numpy.ma import allclose, allequal, common_fill_value  # noqa
 from numpy.ma import make_mask_none, dot, filled  # noqa
 from numpy.ma import getmask, getmaskarray, identity  # noqa
-from numpy.ma import indices, innerproduct, masked, put, putmask, rank, ravel  # noqa
+from numpy.ma import indices, innerproduct, masked, put, putmask, ravel  # noqa
 from numpy.ma import set_fill_value, shape, size, isMA, isMaskedArray, is_mask, isarray  # noqa
 from numpy.ma import make_mask, mask_or, nomask   # noqa
 from numpy import sctype2char, get_printoptions, set_printoptions
diff --git a/Lib/tvariable.py b/Lib/tvariable.py
index 9d4f5d7..5dadfd6 100644
--- a/Lib/tvariable.py
+++ b/Lib/tvariable.py
@@ -613,9 +613,9 @@ class TransientVariable(AbstractVariable, numpy.ma.MaskedArray):
                 d.setBounds(None)
             else:
                 b = numpy.ma.filled(value)
-                if numpy.ma.rank(b) == 2:
+                if numpy.rank(b) == 2:
                     d.setBounds(b)
-                elif numpy.ma.rank(b) == 1:
+                elif numpy.rank(b) == 1:
                     b1 = numpy.zeros((len(b) - 1, 2), b.dtype.char)
                     b1[:, 0] = b[:-1]
                     b1[:, 1] = b[1:]
-- 
2.17.2 (Apple Git-113)

