From 1ab2c655d3ec1bab5868f489c0cc7a6047432bc5 Mon Sep 17 00:00:00 2001
From: muryanto1 <muryanto1@llnl.gov>
Date: Tue, 4 Feb 2020 16:27:04 -0800
Subject: [PATCH] replaced numpy.rank() with numpy.ndim(), adding
 test_setdimattribute*

---
 Experimental/predsel.py |  2 +-
 Lib/tvariable.py        |  4 ++--
 tests/test_tvariable.py | 19 +++++++++++++++++++
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/Experimental/predsel.py b/Experimental/predsel.py
index 8b90b5e..3f325b9 100644
--- a/Experimental/predsel.py
+++ b/Experimental/predsel.py
@@ -43,7 +43,7 @@ class PredicateComponent (cdms.selectors.SelectorComponent):
         axis = fetchedaxes[index]
         m = numpy.zeros(fetched.shape,numpy.int32)
         if index <>0:
-            p = numpy.arange(numpy.rank(fetched))
+            p = numpy.arange(numpy.ndim(fetched))
             p[0] = index
             p[index] = 0
             m = numpy.transpose(m, p)
diff --git a/Lib/tvariable.py b/Lib/tvariable.py
index 5dadfd6..9f73ad9 100644
--- a/Lib/tvariable.py
+++ b/Lib/tvariable.py
@@ -613,9 +613,9 @@ class TransientVariable(AbstractVariable, numpy.ma.MaskedArray):
                 d.setBounds(None)
             else:
                 b = numpy.ma.filled(value)
-                if numpy.rank(b) == 2:
+                if numpy.ndim(b) == 2:
                     d.setBounds(b)
-                elif numpy.rank(b) == 1:
+                elif numpy.ndim(b) == 1:
                     b1 = numpy.zeros((len(b) - 1, 2), b.dtype.char)
                     b1[:, 0] = b[:-1]
                     b1[:, 1] = b[1:]
diff --git a/tests/test_tvariable.py b/tests/test_tvariable.py
index 3987b5e..187a21d 100644
--- a/tests/test_tvariable.py
+++ b/tests/test_tvariable.py
@@ -174,6 +174,25 @@ class TestTransientVariables(basetest.CDMSBaseTest):
         newlat.setBounds(None)
         samp = cdms2.axis.take(newlat, (2, 4, 6))
 
+    def test_setdimattribute1(self):
+        xaxis = cdms2.createAxis([0.1, 0.2], id='x')
+        taxis = cdms2.createAxis([10.0, 20.0], id='t')
+        taxis.units = 'seconds'
+        v1 = cdms2.tvariable.TransientVariable([[1.1, 1.2], [2.1, 2.1]], axes=[taxis, xaxis], id='var')
+        v2 = cdms2.tvariable.TransientVariable([[3.1, 3.2], [4.1, 4.1]], axes=[taxis, xaxis], id='var')
+        v2.setdimattribute(dim=0, field='bounds', value=v1)
+        v2_dim = v2.getdimattribute(0, 'bounds')
+        compare_arr = numpy.array([1.1, 2.1, 2.1])
+        self.assertTrue(numpy.array_equal(v2_dim, compare_arr))
+
+    def test_setdimattribute2(self):
+        f = cdms2.open('https://aims3.llnl.gov/thredds/dodsC/cmip5_css01_data/cmip5/output1/CNRM-CERFACS/CNRM-CM5/amip/3hr/atmos/cfSites/r1i1p1/v20120406/prw/prw_cfSites_CNRM-CM5_amip_r1i1p1_197901010300-200901010000.nc')
+        v = f('prw', time=slice(0, 10))
+        t = f('time_bnds')[:10]
+        t_bounds = t.getdimattribute(0, 'bounds')
+        v.setdimattribute(dim=0, field='bounds', value=t)
+        v_dim_attr = v.getdimattribute(0, 'bounds')
+        self.assertTrue(numpy.array_equal(v_dim_attr, t_bounds))
 
 if __name__ == "__main__":
     basetest.run()
-- 
2.17.2 (Apple Git-113)

